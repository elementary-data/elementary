name: Test release
on:
  workflow_dispatch:
    inputs:
      should-bump-on-success:
        description: "Should the version be bumped on success"
        type: boolean
        required: false
        default: false

jobs:
  get-latest-release-tags:
    runs-on: ubuntu-latest
    outputs:
      py: ${{ steps.get-tag.outputs.py }}
      py-number: ${{ steps.get-tag.outputs.py-number }}
      dbt: ${{ steps.get-tag.outputs.dbt }}
      py-bumped-number: ${{ steps.bump-tag.outputs.py-bumped-number }}
      dbt-bumped: ${{ steps.bump-tag.outputs.dbt-bumped }}
      py-bumped: ${{ steps.bump-tag.outputs.py-bumped }}
    steps:
      - name: Get latest release tag
        id: get-tag
        run: |
          echo "py=$(curl -s https://api.github.com/repos/$GITHUB_REPOSITORY/releases/latest | jq '.tag_name' | sed 's/\"//g')" >> $GITHUB_OUTPUT
          echo "py-number=$(curl -s https://api.github.com/repos/$GITHUB_REPOSITORY/releases/latest | jq '.tag_name' | sed 's/\"//g' | cut -c 2-)" >> $GITHUB_OUTPUT
          echo "dbt=$(curl -s https://api.github.com/repos/elementary-data/dbt-data-reliability/releases/latest | jq '.tag_name' | sed 's/\"//g')" >> $GITHUB_OUTPUT

      - name: Bump tag version
        id: bump-tag
        run: |
          echo "py-bumped=$(echo ${{ steps.get-tag.outputs.py }} | awk -F. '/[0-9]+\./{$NF++;print}' OFS=.)" >> $GITHUB_OUTPUT
          echo "py-bumped-number=$(echo ${{ steps.get-tag.outputs.py }} | awk -F. '/[0-9]+\./{$NF++;print}' OFS=. | cut -c 2-)" >> $GITHUB_OUTPUT
          echo "dbt-bumped=$(echo ${{ steps.get-tag.outputs.dbt }} | awk -F. '/[0-9]+\./{$NF++;print}' OFS=.)" >> $GITHUB_OUTPUT

      - name: Confirm release tag
        run: |
          echo "Python: ${{ steps.get-tag.outputs.py }}"
          echo "Python number: ${{ steps.get-tag.outputs.py-number }}"
          echo "dbt: ${{ steps.get-tag.outputs.dbt }}"
          echo "Python bumped: ${{ steps.bump-tag.outputs.py-bumped }}"
          echo "Python bumped number: ${{ steps.bump-tag.outputs.py-bumped-number }}"
          echo "dbt bumped: ${{ steps.bump-tag.outputs.dbt-bumped }}"

  validate-upgrade-cli:
    strategy:
      fail-fast: false
      matrix:
        warehouse-type:
          [
            postgres,
            snowflake,
            bigquery,
            redshift,
            databricks,
            databricks_catalog,
          ]
    needs: get-latest-release-tags
    uses: ./.github/workflows/test-warehouse.yml
    with:
      warehouse-type: ${{ matrix.warehouse-type }}
      dbt-data-reliability-ref: ${{ needs.get-latest-release-tags.outputs.dbt }}
    secrets: inherit

  recommendation:
    runs-on: ubuntu-latest
    needs: [get-latest-release-tags, validate-upgrade-cli]
    steps:
      - name: recommend unbreaking change upgrade
        run: |
          echo "Everything ran successfully, you can bump version to ${{ needs.get-latest-release-tags.outputs.py-bumped-number }}"
      - name: recommend breaking change upgrade
        if: ${{ failure() }}
        uses: actions/github-script@v6
        with:
          script: |
            core.setFailed("Upgrade validation failed. Make sure you do anything to keep backwards compatibility - If not possible, update minor.")

  bump-version:
    needs: [get-latest-release-tags, recommendation]
    if: ${{ inputs.should-bump-on-success }}
    uses: ./.github/workflows/bump-version.yml
    with:
      cli-version: ${{ needs.get-latest-release-tags.outputs.py-bumped-number }}
      dbt-package-version: ${{ needs.get-latest-release-tags.outputs.dbt }}
    secrets: inherit
